---
title: "Mini Project 1: Data Cleaning"
author: Dilrose Karakattil
date: September 17, 2023
format:
  html:
    toc: true
    theme: flatly
---

```{r}
#| label: setup
#| include: false

knitr::opts_chunk$set(
    warning = FALSE,
    message = FALSE,
    fig.path = "figs/", # Folder where rendered plots are saved
    fig.width = 7.252, # Default plot width
    fig.height = 4, # Default plot height
    fig.retina = 3, # For better plot resolution
    comment = "#>"
)

# Load libraries
library(tidyverse)
library(readxl)
library(here)
library(janitor)
```

# 1. Load the data

```{r}
pc_sales_2021 <- read_excel(here('data', 'pc_sales_2021 copy.xlsx'), skip = 3, sheet = "pc_sales")
glimpse(pc_sales_2021)
```

# 2. Clean the names

```{r}
pc_sales_2021 <- pc_sales_2021%>% 
    clean_names()

pc_sales <- pc_sales_2021 %>% 
    rename(country = regions_countries)     # renaming it to country

glimpse(pc_sales)
```

# 3. Reshape the data

```{r}
pc_sales_new <- pc_sales %>% 
    select(country, q1_q4_2019, q1_q4_2020, q1_q4_2021) # selecting all columns except sales percent growth one's

pc_sales_new <- pc_sales_new %>% 
    pivot_longer(
        names_to = "year",
        values_to = "sales",
        cols = q1_q4_2019:q1_q4_2021    # converting wide to long format
    ) %>% 
    filter(!is.na(country))             # removing NA values from country
head(pc_sales_new)
```

# 4. Convert `year` to a number

```{r}
pc_sales_new <- pc_sales_new %>% 
    separate(year, into = c("drop1", "drop2", "year"), sep = "_")
head(pc_sales_new)

pc_sales_final <- pc_sales_new %>% 
    select(country, year, sales)        # selecting all columns except drop1 and drop2

pc_sales_final %>% 
    mutate(
        year = as.numeric(year)         # converting year to a number datatype
    )
head(pc_sales_final)
```

# 5. Drop rows that aren't countries

```{r}
regions <- c(
    "EUROPE",
    "EU 27 countries + EFTA + UK",
    "OTHER COUNTRIES",
    "RUSSIA, TURKEY & OTHER EUROPE",
    "AMERICA",
    "NAFTA",
    "AFRICA",
    "CENTRAL & SOUTH AMERICA",
    "ASIA/OCEANIA/MIDDLE EAST",
    "ASEAN",
    "ALL COUNTRIES/REGIONS",
    "OTHER COUNTRIES/REGIONS",
    "TOTAL OICA MEMBERS"
)

pc_sales_final <- pc_sales_final %>% 
    filter(! country %in% regions) %>% 
    mutate(country = str_to_title(country))
head(pc_sales_final)
```

# 6. Rearrange the rows

```{r}
pc_sales_final <- pc_sales_final %>% 
    arrange(year, country)
head(pc_sales_final)
```

# 7. Save the cleaned file

```{r}
folder_path <- here("data/")
setwd(folder_path)

write.csv(pc_sales_final, file = file.path(folder_path, "my_clean_data.csv")) # saving the file
```

```{r}
# Reading the cleaned data file
my_clean_data = read_csv(here("data", "my_clean_data.csv"))
head(my_clean_data)
```

# BONUS: Make a summary visualization

```{r}
#| label: barplot
#| fig.width: 7
#| fig.height: 6

options(scipen = 999)
library(ggplot2)

# Recode the country column using ifelse
my_clean_data$country <- ifelse(my_clean_data$country %in% c("China", "United States Of America"), my_clean_data$country, "Other")


# Reorder the levels of the factor variable
my_clean_data$country <- fct_relevel(my_clean_data$country, "Other", "China", "United States Of America")

# Plotting the graph
ggplot(my_clean_data, aes(x = year, y = sales, fill = country)) +
    geom_col() +
    scale_fill_manual(
        values = c("China" = "red", "United States Of America" = "blue", "Other" = "grey"),
        guide = guide_legend(title = "Country") 
        ) +
    labs(x = "Year", y = " Vehicle Sales", fill = my_clean_data$country) +
    theme_minimal()
```
