---
title: "Mini Project 3"
author: Dilrose Karakattil
date: November 12, 2023 
format: 
  html:
    toc: true 
    toc-location: right
    theme: flatly
    self-contained: true
---

```{r}
#| label: setup 
#| include: false

# Load libraries and settings here
library(tidyverse)
library(here)
library(readxl)
library(dplyr)
library(janitor)
library(ggplot2)
library(GGally)
library(cowplot)
library(forcats)
library(ggrepel)

knitr::opts_chunk$set(
  warning = FALSE,
  message = FALSE,
  comment = "#>",
  fig.path = "figs/", # Folder where rendered plots are saved
  fig.width = 7.252, # Default plot width
  fig.height = 4, # Default plot height
  fig.retina = 3 # For better plot resolution
)

# Put any other "global" settings here, e.g. a ggplot theme:
theme_set(theme_bw(base_size = 20))
```

## 2. Load the data
```{r}
#load data used in the project
df <- read_excel(here("data_raw","US_State_Wind_Energy_Facts_2018 copy.xlsx"))
```


## 3. Preview the data
```{r}
# viewing the data
glimpse(df)
head(df)
```

## 4. Clean the data
```{r}
# converting categorical values to numerical values
df1 <- df %>% 
    mutate(
        Ranking = as.numeric(Ranking),
        `Equivalent Homes Powered` = as.numeric(`Equivalent Homes Powered`),
        `Total Investment ($ Millions)` = as.numeric(`Total Investment ($ Millions)`),
        `# of Wind Turbines` = as.numeric(`# of Wind Turbines`)
    )

# using clean_names() to clean the data set
wind <- df1 %>% 
    clean_names() 

# filtering out NA values
wind <- wind %>% 
    filter(!is.na(ranking))  %>% 
    mutate(
        state = str_to_title(state, locale = "en")
    )
glimpse(wind)

write.csv(x = wind, file = "data_processed/wind.csv")
```

While cleaning up the data, we must ensure that we have the correct variable names, with no spaces between the words, that are easy to read and interpret. I used the `clean_names()` function from the `janitor` library for this.


## 5. Summarise the data
```{r}
# reading the file
wind <- read_csv(here("data_processed", "wind.csv"))

# selecting required columns
wind <- wind %>% 
    select(ranking:number_of_wind_turbines)

# Viewing the correlation
wind %>%
    ggcorr(label = TRUE, label_size = 3, hjust = 0.80, size = 3)

# computing new variables
wind <- wind %>%
    mutate(
        capacity_per_dollar_invested = round((installed_capacity_mw / total_investment_millions) * 100),
        homes_powered_per_wind_turbines = equivalent_homes_powered / number_of_wind_turbines
    )  %>% 
    rename("capacity_per_dollar_invested (%)" = "capacity_per_dollar_invested")
```
### Summary Measure Chart 1A

```{r}
wind %>%
    mutate(
        state = reorder(state, installed_capacity_mw)
    ) %>% 
    slice(1:10) %>% 
    arrange(state, desc(installed_capacity_mw)) %>%
    ggplot() +
    geom_col(aes(y = state, x = installed_capacity_mw), fill= "steelblue") +
    theme_light() +
    labs(
        x = "Installed Capacity in MW",
        y = "State",
        title = "Top 10 Installed Capacity by State"
    ) + scale_x_continuous(
     labels = scales::comma
    )
```

### Summary Measure Chart 1B
```{r}
wind %>%
    mutate(
        state = reorder(state, equivalent_homes_powered)
    ) %>% 
    slice(1:10) %>% 
    arrange(state, desc(equivalent_homes_powered)) %>%
    ggplot() +
    geom_col(aes(y = state, x = equivalent_homes_powered/10^3) , fill = "darkgray") +
    theme_light() +
    labs(
        x = "Equivalent Homes Powered (in thousands)",
        y = "State",
        title = "Top 10 Equivalent Homes Powered by State"
    ) + scale_x_continuous(
     labels = scales::comma
    )
```

### Summary Measure Chart 2
```{r}
# plotting the graph between Installed Capacity and No. of Turbines
corr <- cor(
    wind$installed_capacity_mw, wind$number_of_wind_turbines,
    use = "complete.obs")
corLabel <- paste("r = ", round(corr, 2))

wind %>%
    ggplot() +
    geom_point(
        aes(
            x = installed_capacity_mw,
            y = number_of_wind_turbines),
        alpha = 0.9, color = "steelblue", size = 2
    ) +
    annotate(
        geom = 'text',
        x = 10, y = 14000,
        label = corLabel, color = "red",
        hjust = 0, size = 5) + 
    theme_classic(base_size = 13) + 
    scale_x_log10() + scale_y_log10() +
    labs(
        x = "Log length of Installed Capacity in MW",
        y = "Log length of Number of Wind Turbines"
    )
    
# measuring centrality and variablity of the below variables
summary(wind$installed_capacity_mw)
summary(wind$total_investment_millions)
summary(wind$equivalent_homes_powered)
```

##### Observations

1. We can see from charts 1A and 1B that California has a larger installed capacity than Kansas. While it is expected that California will power more homes in California than Kansas, the opposite is seen in this case. Kansas is powering more homes than California despite having less installed capacity. Washington, Colorado, and Oregon represent cases that are similar to this. Washington is the state with the least installed capacity, powering more homes than Oregon, while Oregon has the most installed capacity and powers the fewest homes.

2. A log-linear relationship between installed capacity and the number of turbine variables can be observed in chart 2. The number of turbines increases with the capacity.


## 6. Visualize the data

### Chart 1
```{r, fig.width=9, fig.height=5}
# Create a data frame with full state names and their abbreviations
state_data <- data.frame(
  state_full = state.name,
  state_abbrev = state.abb
)

# Print the data frame
head(state_data)

# merging the state data set with the original data set having full state names
merged_data <- left_join(wind, state_data, by = c("state" = "state_full"))

# Print the merged data
head(merged_data)

merged_data %>% 
    mutate(
        state_abbrev = reorder(state_abbrev, installed_capacity_mw)
    ) %>% 
    slice(1:25) %>% 
    arrange(state_abbrev, desc(installed_capacity_mw)) %>% 
    
    ggplot(aes(x=state_abbrev, y=installed_capacity_mw)) +
    geom_segment(aes(x=state_abbrev, xend=state_abbrev, y=0, yend=installed_capacity_mw), color="grey") +
    geom_point(color="steelblue", size=2) +
    theme_light() +
    theme(
    panel.grid.major.x = element_blank(),
    panel.border = element_blank(),
    axis.ticks.x = element_blank(),
    axis.title = element_text(size=13),
    axis.text = element_text(size=9),
    plot.title = element_text(face = "bold")
    ) + 
    scale_y_continuous(
    breaks = c(0, 4000, 8000, 12000, 16000, 20000, 24000, 28000, 32000, 36000, 40000, 44000), labels = scales::comma,
    ) +
    labs(
        x = "State",
        y = "Installed Capacity in MW",
        title = "Power Play: Top 25 statewise installed capacity in MW",
        subtitle = "Texas and Oklahoma - Top most states having the highest installed capacity in MW"
        ) 
```

### Chart 2
```{r}
merged_data %>% 
    ggplot(aes(x = total_investment_millions, y = equivalent_homes_powered/10^3)) +
    geom_point(color = "steelblue") + geom_smooth(method = 'lm', se = FALSE, color = "grey") +
    scale_x_log10() +
    scale_y_log10() +
    theme_light() +
    theme(
    axis.title = element_text(size=13),
    axis.text = element_text(size=9),
    plot.title = element_text(face = "bold")
    ) +
    labs(title = "Investment Impact on Power Generation",
       x = "Total Investment (in $ Millions)",
       y = "Equivalent Homes Powered (in thousands)") +
     scale_fill_gradient(low = "lightblue", high = "darkblue")
```

## 7. Summarize your analysis

There are numerous errors in the original chart. 
1. Although we are aware that the graph is about the production of wind power, the placement of wind turbines in each state causes the graph to become clustered.
2. It is not required to create a single graph using every variable. Instead, we may use these variables to create many charts, each of which can express a different message.
3. There is inconsistent labeling on the x axis. It lists the names of the states as well as the money that each of them invested. Furthermore, it will be confusing for readers to learn that some state-invested funds are kept at 45 degrees while others are kept at 90 degrees due to inappropriate placement of the funds. 

The basic layout concepts that were covered in class included: having appropriate axes scaling, having annotations to draw attention to a particular message, avoiding the legends and plotting them directly on the graph, employing the appropriate color scheme for each graph, and, lastly, using a good font family.

**Chart 1**- I plotted a lollipop chart to highlight leadership in installed capacity by each state because the first chart looked clustered because it took into account all the variables in turn. According to the article's authors, the most significant indicator of installed capacity is displayed in the first chart, which shows the state wise installed capacity in MW.

**Chart 2**- The relationship between total investment and equivalent homes is logically shown in the second chart; powered by the data set due to their strong correlation. The correlation between them doesn't appear to be very strong when we plot them on a scatterplot. This is because the variables have a log-linear scale rather than a linear one. Thus, I used a log scale in my design choices to emphasize this message. I've created well-designed charts with distinct x and y axes and fitting titles. Additionally, I used `geom_smooth()`, which will aid in trend identification.

